name: Workflow Run On Push

on:
  push:
    branches:
      - main

jobs:
  # python-tests:
  #   name: Python Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.12.0"

  #     - name: Poetry Check Sync Python
  #       run: |
  #         cd python/sync_version/
  #         pip install poetry
  #         poetry install
  #         poetry run isort --check-only server
  #         poetry run black --check server
  #         poetry run flake8 server

  #     - name: Poetry Check And Run Linters Async Python
  #       run: |
  #         cd python/async_version/
  #         pip install poetry
  #         poetry install
  #         poetry run isort --check-only server
  #         poetry run black --check server
  #         poetry run flake8 server

  # typescript-tests:
  #   name: TypeScript Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "21.7.3"

  #     - name: Install dependencies & Run TypeScript Linters
  #       run: |
  #         cd terms_glossary
  #         yarn
  #         npx eslint .

  # javascript-tests:
  #   name: JavaScript Tests
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "21.7.3"

  #     - name: Install JavaScript dependencies
  #       run: |
  #         npm install --prefix java-script/async_version
  #         npm install --prefix java-script/sync_version

  #     - name: Run JavaScript Linters
  #       run: |
  #         cd java-script/async_version
  #         npx eslint .
  #         cd ..
  #         cd sync_version/
  #         npx eslint .


  build_and_push_to_docker_hub:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    # needs: [python-tests, typescript-tests, javascript-tests]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Async Python Docker images
        uses: docker/build-push-action@v2
        with:
          context: python/async_version/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/research_work-async_python:latest

      - name: Build and push Sync Python Docker images
        uses: docker/build-push-action@v2
        with:
          context: python/sync_version/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/research_work-sync_python:latest

      - name: Build and push Async JavaScript Docker images
        uses: docker/build-push-action@v2
        with:
          context: java-script/async_version/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/research_work-async_java_script:latest

      - name: Build and push Sync JavaScript Docker images
        uses: docker/build-push-action@v2
        with:
          context: java-script/sync_version/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/research_work-sync_java_script:latest

      - name: Build and push Terms Glossary Docker image
        uses: docker/build-push-action@v2
        with:
          context: terms_glossary/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/research_work-terms_glossary:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Update docker-compose.yaml on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            curl -sSL "https://raw.githubusercontent.com/madpenguinw/reserch_work_third_term/main/docker-compose.yaml" | cat > /home/penguinw/app/docker-compose.yaml
            curl -sSL "https://raw.githubusercontent.com/madpenguinw/reserch_work_third_term/main/nginx.conf" | cat > /home/penguinw/app/nginx.conf
            curl -sSL "https://raw.githubusercontent.com/madpenguinw/reserch_work_third_term/main/index.html" | sudo cat > /var/www/html/index.html
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/penguinw/app/
            sudo docker pull penguinw/research_work-sync_python:latest
            sudo docker pull penguinw/research_work-async_python:latest
            sudo docker pull penguinw/research_work-sync_java_script:latest
            sudo docker pull penguinw/research_work-async_java_script:latest
            sudo docker pull penguinw/research_work-terms_glossary:latest
            sudo docker-compose down -v
            sudo docker-compose up -d
  
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
